/*
 machina.postal
 Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT (http://www.opensource.org/licenses/mit-license) & GPL (http://www.opensource.org/licenses/gpl-license)
 Version 0.2.3
 */
(function(e,t){typeof module=="object"&&module.exports?module.exports=function(e,n){return t(e,n)}:typeof define=="function"&&define.amd?define(["machina","postal"],function(n,r){return t(n,r,e)}):t(e.machina,e.postal,e)})(this,function(e,t,n,r){var i=e.bus={channels:{},config:{handlerChannelSuffix:"",eventChannelSuffix:".events"},wireHandlersToBus:function(e,t){i.channels[t]._subscriptions.push(i.channels[t].subscribe("#",function(t,n){e.handle.call(e,n.topic,t,n)}))},wireEventsToBus:function(e,t){var n=i.channels[t].eventPublisher=function(){var e=Array.prototype.slice.call(arguments,0),n=e[0].toLowerCase();try{i.channels[t].publish(e[0],e[1])}catch(r){console&&typeof console.log!="undefined"&&console.log(r.toString())}};e.on("*",n)},wireUp:function(e){var n=e.namespace+i.config.handlerChannelSuffix,r=e.namespace+i.config.eventChannelSuffix;i.channels[n]=t.channel(n),i.channels[r]=t.channel(r),i.channels[n]._subscriptions=[],i.wireHandlersToBus(e,n),i.wireEventsToBus(e,r)}};e.on("newfsm",i.wireUp)})